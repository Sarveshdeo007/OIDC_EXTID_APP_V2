@model OIDCDemoApp.Models.DiagnosticViewModel
@{
    ViewData["Title"] = "Authentication Diagnostic";
}

<div class="container mt-4">
    <h2>Authentication Diagnostic Information</h2>

    <div class="card mb-4">
        <div class="card-header">
            <h3>Authentication Status</h3>
        </div>
        <div class="card-body">
            <p class="@(Model.IsAuthenticated ? "text-success" : "text-warning")">
                @(Model.IsAuthenticated ? "User is authenticated" : "User is not authenticated")
            </p>
            @if (!Model.IsAuthenticated)
            {
                <div class="mt-3">
                    <a href="/MicrosoftIdentity/Account/SignIn" class="btn btn-primary">
                        <i class="fas fa-sign-in-alt"></i> Sign in with Volvo Group
                    </a>
                </div>
            }
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h3>Configuration</h3>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Authority</dt>
                <dd class="col-sm-9">@(string.IsNullOrEmpty(Model.Configuration.Authority) ? "Not configured" : Model.Configuration.Authority)</dd>

                <dt class="col-sm-3">Domain</dt>
                <dd class="col-sm-9">@(string.IsNullOrEmpty(Model.Configuration.Domain) ? "Not configured" : Model.Configuration.Domain)</dd>

                <dt class="col-sm-3">Client ID</dt>
                <dd class="col-sm-9">@(string.IsNullOrEmpty(Model.Configuration.ClientId) ? "Not configured" : Model.Configuration.ClientId)</dd>

                <dt class="col-sm-3">Callback Path</dt>
                <dd class="col-sm-9">@(string.IsNullOrEmpty(Model.Configuration.CallbackPath) ? "Not configured" : Model.Configuration.CallbackPath)</dd>

                <dt class="col-sm-3">Signed Out Callback Path</dt>
                <dd class="col-sm-9">@(string.IsNullOrEmpty(Model.Configuration.SignedOutCallbackPath) ? "Not configured" : Model.Configuration.SignedOutCallbackPath)</dd>
            </dl>
        </div>
    </div>

    @if (Model.IsAuthenticated)
    {
        <div class="card mb-4">
            <div class="card-header">
                <h3>Graph API Status</h3>
            </div>
            <div class="card-body">
                <p class="@(Model.GraphApiStatus.StartsWith("Error") ? "text-danger" : "text-success")">
                    @Model.GraphApiStatus
                </p>
                @if (Model.UserInfo != null)
                {
                    <dl class="row">
                        <dt class="col-sm-3">Display Name</dt>
                        <dd class="col-sm-9">@Model.UserInfo.DisplayName</dd>

                        <dt class="col-sm-3">User Principal Name</dt>
                        <dd class="col-sm-9">@Model.UserInfo.UserPrincipalName</dd>

                        <dt class="col-sm-3">User ID</dt>
                        <dd class="col-sm-9">@Model.UserInfo.Id</dd>
                    </dl>
                }
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h3>User Claims</h3>
            </div>
            <div class="card-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var claim in Model.UserClaims)
                        {
                            <tr>
                                <td>@claim.Type</td>
                                <td>@claim.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <div class="mt-4">
        <a href="/" class="btn btn-primary">Back to Home</a>
        <a href="/Home/CheckOpenIdConfig" class="btn btn-info">Check OpenID Configuration</a>
    </div>
</div> 